{"meta":{"title":"Jiacan‘s Blog","subtitle":null,"description":null,"author":"Jiacan Liao","url":"http://liaojiacan.me"},"pages":[{"title":"分类","date":"2017-09-29T09:47:44.000Z","updated":"2017-09-29T09:47:44.000Z","comments":false,"path":"categories/index.html","permalink":"http://liaojiacan.me/categories/index.html","excerpt":"","text":""},{"title":"分类","date":"2017-09-29T09:47:54.000Z","updated":"2017-09-29T09:47:54.000Z","comments":false,"path":"tags/index.html","permalink":"http://liaojiacan.me/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"proto文件","slug":"proto文件","date":"2017-10-10T11:52:00.000Z","updated":"2017-10-10T11:57:15.000Z","comments":true,"path":"2017/10/10/proto文件/","link":"","permalink":"http://liaojiacan.me/2017/10/10/proto文件/","excerpt":"","text":"proto文件是Proto buffers的描述文件 syntax 指定pd编译器的版本，可以设置proto2或者proto3 message 类似java中的class关键字，在PB这里叫消息体 service 服务声明 修饰符 required 非空，必须存在 optional 可选 repeated 可重复出现，类似集合的概念吧 更多介绍参考官方文档，Protocal Buffers 123456789101112131415syntax = &quot;proto3&quot;;service SearchService&#123; rpc search(SearchRequest) returns (SearchResponse) &#123;&#125;&#125;message SearchRequest &#123; required string query = 1; optional int32 page_number = 2; optional int32 result_per_page = 3;&#125;message SearchResponse &#123; string result = 1;&#125;","categories":[],"tags":[{"name":"Protobuf","slug":"Protobuf","permalink":"http://liaojiacan.me/tags/Protobuf/"},{"name":"rpc","slug":"rpc","permalink":"http://liaojiacan.me/tags/rpc/"}]},{"title":"javaagent 的使用","slug":"javaagent-的使用","date":"2017-10-10T03:40:00.000Z","updated":"2017-10-10T03:43:58.000Z","comments":true,"path":"2017/10/10/javaagent-的使用/","link":"","permalink":"http://liaojiacan.me/2017/10/10/javaagent-的使用/","excerpt":"","text":"javaagent 是类似一个JVM的插件，利用JVM提供的Instrumentation API实现获取或者修改加载到JVM中的类字节码。 编写一个javagent的jar的方式如下： 1.实现一个ClassFileTransformer 12345678910public class SimpleTransformer implements ClassFileTransformer &#123; @Override public byte[] transform(ClassLoader loader, String className, Class&lt;?&gt; classBeingRedefined, ProtectionDomain protectionDomain, byte[] classfileBuffer) throws IllegalClassFormatException &#123; System.out.println(className); System.out.println(protectionDomain.toString()); return new byte[0]; &#125;&#125; 2.实现一个Premain-Class 12345678910public class Main &#123; public static void premain(String agentOps, Instrumentation inst) &#123; inst.addTransformer(new SimpleTransformer()); &#125; public static void main(String[] args) &#123; System.out.println(&quot;This is a javaagent!&quot;); &#125;&#125; 3.MANIFEST.MF配置 12345Manifest-Version: 1.0Premain-Class: com.github.liaojiacan.MainCan-Redefine-Classes: trueCan-Retransform-Classes: trueCan-Set-Native-Method-Prefix: true 4.运行命令 1java -javaagent:agent.jar -jar app.jar 代码和assembly的打包配置可以参考，github","categories":[{"name":"逆向","slug":"逆向","permalink":"http://liaojiacan.me/categories/逆向/"}],"tags":[{"name":"java","slug":"java","permalink":"http://liaojiacan.me/tags/java/"},{"name":"java逆向","slug":"java逆向","permalink":"http://liaojiacan.me/tags/java逆向/"}]},{"title":"Linux shell命令:cut命令","slug":"Linux Shell--cut命令","date":"2017-02-23T08:45:44.000Z","updated":"2017-09-29T09:50:37.000Z","comments":true,"path":"2017/02/23/Linux Shell--cut命令/","link":"","permalink":"http://liaojiacan.me/2017/02/23/Linux Shell--cut命令/","excerpt":"","text":"简介将一段数据经过分析，取出我们想要的 1234cut -- cut out selected portions of each line of a file SYNOPSIScut -b list [-n] [file ...]cut -c list [file ...]cut -f list [-d delim] [-s] [file ...] -b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。 -c ：以字符为单位进行分割。 -d ：自定义分隔符，默认为制表符。 -f ：与-d一起使用，指定显示哪个区域。 -n ：取消分割多字节字符。仅和 -b 标志一起使用。如果字符的最后一个字节落在由 -b 标志的 List 参数指示的范围之内，该字符将被写出；否则，该字符将被排除。 1who | cut -d 3-5 #截取 3-5列的内容 1who | cut -c 3-5 #截取 3-5列的内容 中文字符 1cat /etc/passwd|head -n 5|cut -d : -f -2 # 设置分隔符为：","categories":[{"name":"linux","slug":"linux","permalink":"http://liaojiacan.me/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://liaojiacan.me/tags/linux/"},{"name":"shell","slug":"shell","permalink":"http://liaojiacan.me/tags/shell/"}]}]}